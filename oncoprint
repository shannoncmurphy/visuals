library(ComplexHeatmap)
library(TCGAbiolinks)

LGGmut <- GDCquery_Maf(tumor = "LGG", pipelines = "mutect2")
GBMmut <- GDCquery_Maf(tumor = "GBM", pipelines = "mutect2")

mut <- plyr::rbind.fill(LGGmut,GBMmut)

#Filtering mutations in gliomas
EA_pathways <- TCGAbiolinks:::listEA_pathways
Glioma_pathways <- EA_pathways[grep("glioma",tolower(EA_pathways$Pathway)),]
Glioma_signaling <- Glioma_pathways[Glioma_pathways$Pathway == "Glioma Signaling",]
Glioma_signalling_genes <- unlist(strsplit(as.character(Glioma_signaling$Molecules),","))

mut <- mut[mut$Hugo_Symbol %in% Glioma_signalling_genes,]

samples <- unique(mut$Tumor_Sample_Barcode)
genes <- unique(mut$Hugo_Symbol)
mat <- matrix(0,length(genes),length(samples))
colnames(mat) <- samples
rownames(mat) <- genes

pb <- txtProgressBar(min = 0, max = nrow(mat), style = 3)

for(i in 1:nrow(mat)) {
  curGene <- rownames(mat)[i]
  setTxtProgressBar(pb,i)
  for(j in 1:ncol(mat)) {
    curSample <- colnames(mat)[j]
    
    if(length(intersect(mut$Tumor_Sample_Barcode,curSample))==1){
      mat1 <- mut[mut$Tumor_Sample_Barcode == curSample,]
      if(length(intersect(mat1$Hugo_Symbol,curGene))==1){
        mat3 <- mat1[mat1$Hugo_Symbol == curGene,]
        mat[curGene,curSample] <- as.character(mat3$Variant_Type)[1]
      }
    }
  }
}
close(pb)

mat[mat==0] <- ""
colnames(mat) <- substr(colnames(mat),1,12)

mat[is.na(mat)] = ""
mat[1:3,1:3]

alter_fun = list(
  background = function(x,y,w,h) {
    grid.rect(x,y,w-unit(0.5,"mm"),h-unit(0.5,"mm"),gp = gpar(fill = "#CCCCCC", col = NA))
  },
  SNP = function(x,y,w,h) {
    grid.rect(x,y,w-unit(0.5,"mm"),h-unit(0.5,"mm"),gp = gpar(fill = "blue", col = NA))
  },
  DEL = function(x, y, w, h){
    grid.rect(x, y, w-unit(0.5, "mm"), h-unit(0.5, "mm"), gp = gpar(fill = "red", col = NA))
  },
  INS = function(x, y, w, h) {
    grid.rect(x, y, w-unit(0.5, "mm"), h*0.33, gp = gpar(fill = "#008000", col = NA))
  }
)

col = c("INS" = "#008000", "DEL" = "red", "SNP" = "blue")

clin.gbm <- GDCquery_clinic("TCGA-GBM","clinical")
clin.lgg <- GDCquery_clinic("TCGA-LGG","clinical")
